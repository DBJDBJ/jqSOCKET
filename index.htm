<!DOCTYPE html > 
<html>
<!--
//                                                                  
//  DBJ.ORG - Solution Evolution(tm)
//                                                                  
//  Copyright ï¿½ 2010 - 2013 by DBJ.ORG. 
//  All Rights Reserved. GPL applies.                                             
//                                                                  
//  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF DBJ.ORG   
//                                                                  
//  The copyright notice above does not evidence any                
//  actual or intended publication of such source code.             
//                                                                             
-->
<head>
<!--##########################################################################################################-->
<!--		  Set document compatibility mode to IE8Mode                                                      -->
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="application/xhtml+xml; charset=iso-8859-1" />
<!--##########################################################################################################-->
<title>DBJ*MetaSocket&trade; $Revision: 26 $ &copy;2009-2010 by DBJ.ORG</title>
<link href="http://dbj.org/4/blueprint/screen.css" rel="stylesheet" type="text/css" media="all" />
<link href="http://dbj.org/4/blueprint/ie.css" rel="stylesheet" type="text/css" media="all" />
<style type="text/css" >
.toolbar { width:100%; height:10%; margin:1px; padding:1px; }
.toolbar button { margin:2px 5px 2px 2px; width:128px; height:32px; 
                  font-size:16px; overflow:hidden; text-align:left; padding:1px 1px 1px 5px; }
_display { width:100%; height:99%; margin:1px; padding:1px; overflow:auto; 
           font: small/1.1 "courier new",verdana, arial, tahoma ;
         }
/*         */
#specimen { position:absolute; right:10px; bottom:10px; width:150px; height:30px; border:2px solid; z-index:99;
            padding:3px;
            background-color:transparent; } 
.specimen button { height:100%; width:100%; }  
.dbjPanel { height:700px; width:49%; padding:0px;margin:0px; 
            font:12px/1.1 monospace; overflow:hidden;}
.editableText {} 
textarea { overflow:auto; white-space:pre; word-spacing:normal; }
</style>
</head>
<body>
<div id="container">
<div id="toolbar" class="toolbar" >
<button id="highlight">Highlight</button><button id="eval">Eval</button>
</div>
<div class="dbjPanel" style="float:left;">
<textarea id="display" rows="80" cols="160" style="width:99%;height:99%" >
    /* Object to store things collected from dom elements */
    var result = {};
    /* Function called on each element in jQuery stack, to collect attributes or style properties */
    function collector() {
        var names = arguments,
            id_ = function (el) {
                return el.tagName + (el.id ? "#" + el.id : "");
            },
            set_ = function (obj) {
                return obj || {};
            },
for_each_name = function (callback) {
     for (var j = 0, l = names.length; j < l; j++) callback(names[j], j);
            };
        /* the "plug" */
        return function (P) {
            var id = id_(this);
            for_each_name(function (name, idx) {
                if (undefined === P.nvo[name]) {
                result[id][name] = "undefined";
                } else {
                result[id] = set_(result[id]);
                result[id][name] = P.nvo[name].value;
                }
            });
            return false; 
        }
    };
    $("[id][~ bottom]")
    .S(collector('bottom'));

    var show_ = JSON.stringify(result);
    show_.split("{").join("{\n").split("}").join("}\n");

</textarea>
</div>
<div class="dbjPanel" style="float:right;">
<textarea  id="rezult" rows="80" cols="160" style="width:99%;height:99%" class="editableText" ></textarea>
</div>
<div id="specimen" att1="ATT1" att2="true" ><button id="specimen_button" >id=&quot;specimen&quot;</button></div>
<!-- eof #container -->
</div>
</body>
<!-- script src="http://code.jquery.com/jquery-1.9.1.min.js"></!-->
<script src="jquery-1.9.1.js"></script>
<script src="jquery.moreSelectors.js" type="text/javascript" ></script>
<script src="jquery.metasocket.js" type="text/javascript" ></script>
<!-- DBJ -->
<script type="text/javascript" >
    var M$FT = /*@cc_on!@*/false, NL = M$FT ? "\r\n" : "\n";
    var handler = (function() {
    function who_called(F, x) {
            try {
                var who = F.caller.toString().match(/\w+/g);
                return who[0] + " " + who[1];
            } catch (x) {
                return " GLOBAL namespace ";
            }
        }
        function errshow(errobj) {
            return NL + "EXCEPTION: " + errobj.name + " " + ", number : " + (errobj.number & 0xFFFF) +
               ", description : " + errobj.description + (errobj.stack ? NL + errobj.stack : NL)
                + ", from: " + who_called(handler);
        }

        return function(x, error) {
            if ("boolean" === typeof x && x === false) {
                error = x = "Assertion Failed!";
            }
            if (Object.prototype.toString.call(x) === "[object Error]") {
                error = x = errshow(x);
            }
            if (window.console) {
                if (error)
                    window.console.error(x);
                else
                    window.console.info(x);
            }
            return x ;
        }
    } ());
</script>
<script type="text/javascript" >
    /* 
    apply every value in argument object to the 
    css of this jQuery instance 
    */
    jQuery.fn.cssApply = function(propobj) {
        for (var prop in propobj) {
            this.css(prop, propobj[prop]);
        }
        return this;
    };
</script>
<script type="text/javascript" >
    jQuery(function(undefined) {

        var container_ = document.getElementById("container"),
            $toolbar = $("#toolbar", container_)[0],
            $rezult = $("#rezult"),
            $display = $("#display", container_);

        $('.editableText', document.body).each(function() {
            $(this).attr('contentEditable', true);
        });

        //---------------------------------------------------------------------------------

        $("#eval", $toolbar).click(function(event) {
            var rezult = null, x, txt = "";
            try {
                rezult = eval($display.val());
            } catch (x) {
                rezult = handler(x);
            }
            if (rezult) {
                $rezult.val(rezult);
            }
        })

        // Title
        $rezult.val(
           $.S.version + NL +
           "Enhanced Attribute Selectors Version: 1.0.2, by Balazs Endresz (balazs.endresz@gmail.com)" + NL +
           "jQuery : " + $().jquery + NL + NL +
           "Any valid JavaScript on the left can be evaluated and result shown here" + NL +
           "Plugin MetaSocket(tm) called: 'S()', requires one 'plug' function as an argument" + NL +
           "Arguments to the 'plug' are one or more names used in the 'where' part of the selector" + NL +
           "See the trivial example on the left" + NL +
           "-----------------------------------" + NL
        );

    });
</script>
</html>
